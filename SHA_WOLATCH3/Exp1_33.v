// -------------------------------------------------------------
// 
// File Name: hdlsrc_1/sha_64_unroll/Exp1_33.v
// Created: 2022-08-02 16:52:57
// 
// Generated by MATLAB 9.12 and HDL Coder 3.20
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Exp1_33
// Source Path: sha_64_unroll/Hardware/SHA1/Expander1/Exp1_33
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Exp1_33
          (clk,
           In1,
           In2,
           In3,
           In4,
           In5,
           In6,
           In7,
           In8,
           In9,
           In10,
           In11,
           In12,
           In13,
           In14,
           In15,
           In16,
           Out1,
           Out2,
           Out3,
           Out4,
           Out5,
           Out6,
           Out7,
           Out8,
           Out9,
           Out10,
           Out11,
           Out12,
           Out13,
           Out14,
           Out15,
           Out16);


  input   clk;
  input   [31:0] In1;  // uint32
  input   [31:0] In2;  // uint32
  input   [31:0] In3;  // uint32
  input   [31:0] In4;  // uint32
  input   [31:0] In5;  // uint32
  input   [31:0] In6;  // uint32
  input   [31:0] In7;  // uint32
  input   [31:0] In8;  // uint32
  input   [31:0] In9;  // uint32
  input   [31:0] In10;  // uint32
  input   [31:0] In11;  // uint32
  input   [31:0] In12;  // uint32
  input   [31:0] In13;  // uint32
  input   [31:0] In14;  // uint32
  input   [31:0] In15;  // uint32
  input   [31:0] In16;  // uint32
  output  [31:0] Out1;  // uint32
  output  [31:0] Out2;  // uint32
  output  [31:0] Out3;  // uint32
  output  [31:0] Out4;  // uint32
  output  [31:0] Out5;  // uint32
  output  [31:0] Out6;  // uint32
  output  [31:0] Out7;  // uint32
  output  [31:0] Out8;  // uint32
  output  [31:0] Out9;  // uint32
  output  [31:0] Out10;  // uint32
  output  [31:0] Out11;  // uint32
  output  [31:0] Out12;  // uint32
  output  [31:0] Out13;  // uint32
  output  [31:0] Out14;  // uint32
  output  [31:0] Out15;  // uint32
  output  [31:0] Out16;  // uint32

	parameter I1 = 0,
	     I2 = 0,		
	     I3 = 0,		
	     I4 = 0,		
	     I5 = 0,		
	     I6 = 0,		
	     I7 = 0,		
	     I8 = 0,		
	     I9 = 0,		
	     I10 = 0,		
	     I11= 0,		
	     I12 = 0,		
	     I13 = 0,		
	     I14 = 0,		
	     I15 = 0,		
	     I16 = 0;		
  reg [31:0] Delay11_out1;  // uint32
  reg [31:0] Delay10_out1;  // uint32
  reg [31:0] Delay9_out1;  // uint32
  reg [31:0] Delay8_out1;  // uint32
  reg [31:0] Delay2_out1;  // uint32
  reg [31:0] Delay1_out1;  // uint32
  reg [31:0] Delay4_out1;  // uint32
  reg [31:0] Delay3_out1;  // uint32
  reg [31:0] Delay5_out1;  // uint32
  reg [31:0] Delay6_out1;  // uint32
  reg [31:0] Delay7_out1;  // uint32
  reg [31:0] Delay12_out1;  // uint32
  reg [31:0] Delay13_out1;  // uint32
  reg [31:0] Delay14_out1;  // uint32
  reg [31:0] Delay15_out1;  // uint32
  reg [31:0] Delay16_out1;  // uint32

 if (I1 == 0) begin
 latch u_latch_1(.clk(clk),.In(In1),.Out(Out1));

  end
 else begin
 	 latch_inv u_latch1 (.clk(clk),.In(In1),.Out(Out1));
 end 
 
if (I2 == 0) begin
 latch u_latch_2(.clk(clk),.In(In2),.Out(Out2));
  end
 else begin
 	 latch_inv u_latch2 (.clk(clk),.In(In2),.Out(Out2));
 end 

if (I3 == 0) begin
 latch u_latch_3(.clk(clk),.In(In3),.Out(Out3));
end
 else begin
 	 latch_inv u_latch3 (.clk(clk),.In(In3),.Out(Out3));
 end 

if (I4 == 0) begin
 latch u_latch_4(.clk(clk),.In(In4),.Out(Out4));
end
 else begin
 	 latch_inv u_latch4 (.clk(clk),.In(In4),.Out(Out4));
 end 

if (I5 == 0) begin
 latch u_latch_5(.clk(clk),.In(In5),.Out(Out5));
end
 else begin
 	 latch_inv u_latch5 (.clk(clk),.In(In5),.Out(Out5));
 end 

if (I6 == 0) begin
 latch u_latch_6(.clk(clk),.In(In6),.Out(Out6));
end
 else begin
 	 latch_inv u_latch6 (.clk(clk),.In(In6),.Out(Out6));
 end 

if (I7 == 0) begin
 latch u_latch_7(.clk(clk),.In(In7),.Out(Out7));
end
 else begin
 	 latch_inv u_latch7 (.clk(clk),.In(In7),.Out(Out7));
 end 

if (I8 == 0) begin
 latch u_latch_8(.clk(clk),.In(In8),.Out(Out8));
end
 else begin
 	 latch_inv u_latch8 (.clk(clk),.In(In8),.Out(Out8));
 end 

if (I9 == 0) begin
 latch u_latch_9(.clk(clk),.In(In9),.Out(Out9));
end
 else begin
 	 latch_inv u_latch9 (.clk(clk),.In(In9),.Out(Out9));
 end 


if (I10 == 0) begin
 latch u_latch_10(.clk(clk),.In(In10),.Out(Out10));
end
 else begin
 	 latch_inv u_latch10 (.clk(clk),.In(In10),.Out(Out10));
 end 


if (I11 == 0) begin
 latch u_latch_11(.clk(clk),.In(In11),.Out(Out11));
end
 else begin
 	 latch_inv u_latch11 (.clk(clk),.In(In11),.Out(Out11));
 end 


if (I12 == 0) begin
 latch u_latch_12(.clk(clk),.In(In12),.Out(Out12));
end
 else begin
 	 latch_inv u_latch12 (.clk(clk),.In(In12),.Out(Out12));
 end 


if (I13 == 0) begin
 latch u_latch_13(.clk(clk),.In(In13),.Out(Out13));
  end
 else begin
 	 latch_inv u_latch13 (.clk(clk),.In(In13),.Out(Out13));
 end 


if (I14 == 0) begin
 latch u_latch_14(.clk(clk),.In(In14),.Out(Out14));
 end
 else begin
 	 latch_inv u_latch14 (.clk(clk),.In(In14),.Out(Out14));
 end 


if (I15 == 0) begin
 latch u_latch_15(.clk(clk),.In(In15),.Out(Out15));
 end
 else begin
 	 latch_inv u_latch15 (.clk(clk),.In(In15),.Out(Out15));
 end 


if (I16 == 0) begin
 latch u_latch_16(.clk(clk),.In(In16),.Out(Out16));
  end
 else begin
 	 latch_inv u_latch16 (.clk(clk),.In(In16),.Out(Out16));
 end 

endmodule  // Exp1_33

