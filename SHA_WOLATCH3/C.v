// -------------------------------------------------------------
// 
// File Name: hdlsrc_hard/Sha2_trimmed/C.v
// Created: 2022-06-30 15:03:17
// 
// Generated by MATLAB 9.7 and HDL Coder 3.15
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: C
// Source Path: Sha2_trimmed/Hardware/SHA1/Expander1/Exp1_31-32/C
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module C
          (In1,
           In2,
           In3,
           In4,
           Out1);


  input   [31:0] In1;  // uint32
  input   [31:0] In2;  // uint32
  input   [31:0] In3;  // uint32
  input   [31:0] In4;  // uint32
  output  [31:0] Out1;  // uint32


  wire [31:0] Bit_Rotate_out1;  // uint32
  wire [31:0] Bit_Rotate1_out1;  // uint32
  wire [31:0] Bit_Shift_out1;  // uint32
  wire [31:0] Bitwise_XOR1_out1;  // uint32
  wire [31:0] Bit_Rotate2_out1;  // uint32
  wire [31:0] Bit_Rotate3_out1;  // uint32
  wire [31:0] Bit_Shift1_out1;  // uint32
  wire [31:0] Bitwise_XOR_out1;  // uint32
  wire [31:0] Add_add_temp;  // ufix32
  wire [31:0] Add_add_temp_1;  // ufix32
  wire [31:0] Add_out1;  // uint32


  assign Bit_Rotate_out1 = {In2[6:0], In2[31:7]};



  assign Bit_Rotate1_out1 = {In2[17:0], In2[31:18]};



  assign Bit_Shift_out1 = In2 >> 8'd3;



  assign Bitwise_XOR1_out1 = Bit_Shift_out1 ^ (Bit_Rotate_out1 ^ Bit_Rotate1_out1);



  assign Bit_Rotate2_out1 = {In3[16:0], In3[31:17]};



  assign Bit_Rotate3_out1 = {In3[18:0], In3[31:19]};



  assign Bit_Shift1_out1 = In3 >> 8'd10;



  assign Bitwise_XOR_out1 = Bit_Shift1_out1 ^ (Bit_Rotate2_out1 ^ Bit_Rotate3_out1);


alpha4_1adder u_4_1adda (In1,  // uint32
                              Bitwise_XOR1_out1,  // uint32
                             Bitwise_XOR_out1,  // uint32
                              In4,  // uint32
                              Add_out1   // uint32
                              );

  assign Out1 = Add_out1;

endmodule  // C

