// -------------------------------------------------------------
// 
// File Name: hdlsrc_1/sha_64_unroll/Exp2_2.v
// Created: 2022-08-02 16:53:01
// 
// Generated by MATLAB 9.12 and HDL Coder 3.20
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Exp2_2
// Source Path: sha_64_unroll/Hardware/SHA2/Expander2/Exp2_2
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Exp2_2
          (clk,
           In1,
           In2,
           In3,
           In4,
           In5,
           In6,
           In7,
           In8,
           Out1,
           Out2,
           Out3,
           Out4,
           Out5,
           Out6,
           Out7,
           Out8);


  input   clk;
  input   [31:0] In1;  // uint32
  input   [31:0] In2;  // uint32
  input   [31:0] In3;  // uint32
  input   [31:0] In4;  // uint32
  input   [31:0] In5;  // uint32
  input   [31:0] In6;  // uint32
  input   [31:0] In7;  // uint32
  input   [31:0] In8;  // uint32
  output  [31:0] Out1;  // uint32
  output  [31:0] Out2;  // uint32
  output  [31:0] Out3;  // uint32
  output  [31:0] Out4;  // uint32
  output  [31:0] Out5;  // uint32
  output  [31:0] Out6;  // uint32
  output  [31:0] Out7;  // uint32
  output  [31:0] Out8;  // uint32

	parameter I1 = 0,
	     I2 = 0,		
	     I3 = 0,		
	     I4 = 0,		
	     I5 = 0,		
	     I6 = 0,		
	     I7 = 0,		
	     I8 = 0;		


  reg [31:0] Delay_out1;  // uint32
  reg [31:0] Delay1_out1;  // uint32
  reg [31:0] Delay2_out1;  // uint32
  reg [31:0] Delay3_out1;  // uint32
  reg [31:0] Delay4_out1;  // uint32
  reg [31:0] Delay5_out1;  // uint32
  reg [31:0] Delay6_out1;  // uint32
  reg [31:0] Delay7_out1;  // uint32

 if (I1 == 0) begin
 latch u_latch_1(.clk(clk),.In(In1),.Out(Out1));
  end
 else begin
 	 latch_inv u_latch1 (.clk(clk),.In(In1),.Out(Out1));
 end 

 if (I2 == 0) begin
 latch u_latch_2(.clk(clk),.In(In2),.Out(Out2));
 end
 else begin
 	 latch_inv u_latch2 (.clk(clk),.In(In2),.Out(Out2));
 end 
 
if (I3 == 0) begin
 latch u_latch_3(.clk(clk),.In(In3),.Out(Out3));
 end
 else begin
 	 latch_inv u_latch3 (.clk(clk),.In(In3),.Out(Out3));
 end 

if (I4 == 0) begin
 latch u_latch_4(.clk(clk),.In(In4),.Out(Out4));
end
 else begin
 	 latch_inv u_latch4 (.clk(clk),.In(In4),.Out(Out4));
 end 

 if (I5 == 0) begin
 latch u_latch_5(.clk(clk),.In(In5),.Out(Out5));
end
 else begin
 	 latch_inv u_latch5 (.clk(clk),.In(In5),.Out(Out5));
 end 

  if (I6 == 0) begin
 latch u_latch_6(.clk(clk),.In(In6),.Out(Out6));
end
 else begin
 	 latch_inv u_latch6 (.clk(clk),.In(In6),.Out(Out6));
 end 

 if (I7 == 0) begin
 latch u_latch_7(.clk(clk),.In(In7),.Out(Out7));
end
 else begin
 	 latch_inv u_latch7 (.clk(clk),.In(In7),.Out(Out7));
 end 

 if (I8 == 0) begin
 latch u_latch_8(.clk(clk),.In(In8),.Out(Out8));

 end
 else begin
 	 latch_inv u_latch8 (.clk(clk),.In(In8),.Out(Out8));
 end 

endmodule  // Exp2_2

