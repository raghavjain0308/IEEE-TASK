// -------------------------------------------------------------
// 
// File Name: hdlsrc_1/sha_64_unroll/Exp1_4.v
// Created: 2022-08-02 16:52:57
// 
// Generated by MATLAB 9.12 and HDL Coder 3.20
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Exp1_4
// Source Path: sha_64_unroll/Hardware/SHA1/Expander1/Exp1_4
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Exp1_4
          (clk,clkw_p1,
           reset,
           Input_rsvd,
           Input1,
           Input2,nonce,
           Out1,
           Out2,
           Out3,
           Out4);


  input   clk,clkw_p1;
  input   reset;
  input   [31:0] Input_rsvd;  // uint32
  input   [31:0] Input1;  // uint32
  input   [31:0] Input2,nonce;  // uint32
  output  [31:0] Out1;  // uint32
  output  [31:0] Out2;  // uint32
  output  [31:0] Out3;  // uint32
  output  [31:0] Out4;  // uint32


  reg [31:0] Delay_out1;  // uint32
  reg [31:0] Delay1_out1;  // uint32
  reg [31:0] Delay2_out1;  // uint32
  wire [31:0] Constant8_out1;  // uint32
  reg [31:0] Delay14_out1;  // uint32
  wire [31:0] Add_out1;  // uint32

  always @(posedge clkw_p1 or negedge reset) begin
  if(reset == 1'b0)
  begin
      Delay_out1 <= 32'h06CBBBDF;
      //Delay_out1 <= 32'h00000000;
  end 
  else 
     begin
        Delay_out1 <= Input_rsvd;
     end
  end


  assign Out1 = Delay_out1;

 always @(posedge clkw_p1 or negedge reset) begin
  if(reset == 1'b0)
  begin
      Delay1_out1 <= 32'hFE666596;
  end 
  else 
     begin
        Delay1_out1 <= Input1;
     end
  end


    assign Out2 = Delay1_out1;

always @(posedge clkw_p1 or negedge reset) begin
  if(reset == 1'b0)
  begin
        Delay2_out1 <= 32'h058FFF55;
 end 
  else 
     begin
        Delay2_out1 <= Input2;
     end
  end




  assign Out3 = Delay2_out1;

//  assign Constant8_out1 = 32'b00000000000000000000000000000001;



 // assign Add_out1 = Constant8_out1 + Delay14_out1;


/*
  always @(posedge clk or negedge reset_nonce)
    begin : Delay14_process
      if (reset_nonce == 1'b0) begin
     // Delay14_out1 <= 32'b00000000000000000000000000000000;
       Delay14_out1 <= 32'b1111_1111_1111_1111_1111_1111_1111_1110;
      end
      else begin
	if(reset_non== 1'b1 )
	begin
	 Delay14_out1 <= 32'b1111_1111_1111_1111_1111_1111_1111_1101;
	end
      else begin
        Delay14_out1 <= Add_out1;
      end
    end
   end
*/
  assign Out4 = nonce;

	
endmodule  // Exp1_4

