// -------------------------------------------------------------
// 
// File Name: hdlsrc_initial_hard/Sha2_trimmed/Comp_initial.v
// Created: 2022-07-04 19:33:41
// 
// Generated by MATLAB 9.7 and HDL Coder 3.15
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Comp_initial
// Source Path: Sha2_trimmed/Hardware/SHA1/COMPRESSOR1/Comp_initial
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Comp_initial
          (
           H8,
           H9,
           H10,
           H11,
           H12,
           H13,
           H14,
           H15,
           W1,
           W2,
           W3,
           A_OUT,
           B_OUT,
           C_OUT,
           D_OUT,
           E_OUT,
           F_OUT,
           G_OUT,
           H_OUT);


  
  input   [31:0] H8;  // uint32
  input   [31:0] H9;  // uint32
  input   [31:0] H10;  // uint32
  input   [31:0] H11;  // uint32
  input   [31:0] H12;  // uint32
  input   [31:0] H13;  // uint32
  input   [31:0] H14;  // uint32
  input   [31:0] H15;  // uint32
  input   [31:0] W1;  // uint32
  input   [31:0] W2;  // uint32
  input   [31:0] W3;  // uint32
  output  [31:0] A_OUT;  // uint32
  output  [31:0] B_OUT;  // uint32
  output  [31:0] C_OUT;  // uint32
  output  [31:0] D_OUT;  // uint32
  output  [31:0] E_OUT;  // uint32
  output  [31:0] F_OUT;  // uint32
  output  [31:0] G_OUT;  // uint32
  output  [31:0] H_OUT;  // uint32


  wire [31:0] SIGMA1_out1;  // uint32
  wire [31:0] CH_out1;  // uint32
  wire [31:0] ADD3_out1;  // uint32
  wire [31:0] Constant1_out1;  // uint32
  wire [31:0] ADD7_out1;  // uint32
  wire [31:0] ADD4_add_temp;  // ufix32
  wire [31:0] ADD4_out1;  // uint32
   wire [31:0] ADD5_out1;  // uint32
  wire [31:0] ADD2_out1;  // uint32
  wire [31:0] SIGMA2_out1;  // uint32
  wire [31:0] CH1_out1;  // uint32
  wire [31:0] ADD1_out1;  // uint32
  wire [31:0] Constant2_out1;  // uint32
  wire [31:0] ADD8_out1;  // uint32
  wire [31:0] ADD9_add_temp;  // ufix32
  wire [31:0] ADD9_out1;  // uint32
  wire [31:0] ADD6_out1;  // uint32
  wire [31:0] Constant3_out1;  // uint32
  wire [31:0] ADD10_out1;  // uint32
  wire [31:0] ADD11_add_temp;  // ufix32
  wire [31:0] ADD11_out1;  // uint32


  assign A_OUT = H8;

  assign B_OUT = H9;

  assign C_OUT = H10;

  SIGMA1 u_SIGMA1 (.X(H12),  // uint32
                           .OUT(SIGMA1_out1)  // uint32
                           );

  CH u_CH (.X(H12),  // uint32
                   .Y(H13),  // uint32
                   .Z(H14),  // uint32
                   .OUT(CH_out1)  // uint32
                   );

 


 
  assign Constant1_out1 = 32'b01000010100010100010111110011000;



alpha4_1adder u_4_1adder1 (Constant1_out1,  // uint32
                              H15,  // uint32
                              W1,  // uint32
                              H11,  // uint32
                              ADD4_out1  // uint32
                              );

alpha3_1adder u_3_1adder1 (SIGMA1_out1,  // uint32
                              CH_out1,  // uint32
                               ADD4_out1,  // uint32
                                ADD5_out1// uint32
                              );



  assign ADD2_out1 = ADD5_out1 - H11;



  assign D_OUT = ADD2_out1;

  SIGMA1 u_SIGMA2 (.X(ADD5_out1),  // uint32
                           .OUT(SIGMA2_out1)  // uint32
                           );

  CH u_CH1 (.X(ADD5_out1),  // uint32
                     .Y(H12),  // uint32
                     .Z(H13),  // uint32
                     .OUT(CH1_out1)  // uint32
                     );

 


  assign Constant2_out1 = 32'b01110001001101110100010010010001;





  alpha4_1adder u_4_1adder2 (Constant2_out1,  // uint32
                              H14,  // uint32
                              W2,  // uint32
                              H10,  // uint32
                              ADD9_out1  // uint32
                              );


alpha3_1adder u_3_1adder2 (SIGMA2_out1,  // uint32
                              CH1_out1,  // uint32
                              ADD9_out1,  // uint32
                                ADD6_out1// uint32
                              );


  assign E_OUT = ADD6_out1;

  assign F_OUT = ADD5_out1;

  assign G_OUT = H12;

  assign Constant3_out1 = 32'b10110101110000001111101111001111;




alpha4_1adder u_4_1adder3 (Constant3_out1,  // uint32
                              H9,  // uint32
                              W3,  // uint32
                              H13,  // uint32
                              ADD11_out1  // uint32
                              );


  assign H_OUT = ADD11_out1;

endmodule  // Comp_initial


